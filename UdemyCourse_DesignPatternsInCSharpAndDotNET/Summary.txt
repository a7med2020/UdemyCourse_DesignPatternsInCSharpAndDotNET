-- Reflection  (like in AbstractFactory.cs)
--Autofac in SingletonInDependencyInjection
-- UnitTest (in SingletonDatabase.cs)

--------------------------------------------
-- Proxy
-- lesson ValueProxy => override operator work (+,-,*,/)
-- Lesson Composite Proxy: SoA/AoS => In computing, an array of structures (AoS), structure of arrays (SoA) or array of structures of arrays (AoSoA) are contrasting ways to arrange a sequence of records in memory
Structure of arrays (SoA) is a layout separating elements of a record (or 'struct' in the C programming language) into one parallel array per field.
-- Lesson DynamicProxyforLogging => Create DynamicObject / Create log funcationality without Editting Exiting code
-- Lesson ViewModel => a good and new way of creating a ViewModel
-- Lesson  Bit Fragging => has the idea of mathematical operators precedence
-------------------------------------------
ChainOfResponsibility
--- lesson Method Chain => Funtion that call itself from object of it's class passed to it (like linked list)
--- lesson Abstract Logger => a Way of creating log functionality
--------------------------------------
command
-- lessons about series of functions with ability to undo 
--------------------------------------
Interpreter
 use it to parsing text or math equation and then processing it, something like what the compiler do
 ------------------------------------
 Mediator
 ---lesson Event Broker => a bunch of events interact together without reference each other
 ------------------------------------
 NullObject
 ----- NullObject is about object default value if it is null
 ----- lesson Null Object  => is using Dynamic Object topic
 -----------------------------------
 Observer
 --- Lesson 1 Observer via the 'event': Keyword is about event
 --- lesson 2 Weak Event Pattern: mentions the term 'weak reference'
  // an event subscription can lead to a memory
  // leak if you hold on to it past the object's
  // lifetime
 --- lesson 4 Observable Collections: mentions BindingList
 --- lesson 6 Property Dependencies: mentions INotifyPropertyChanged


 
